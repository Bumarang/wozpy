name: Build, Test

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python and Install Ruff
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Create Ruff Cache Directory
      run: mkdir -p /home/runner/work/wozpy/wozpy/.ruff_cache/0.1.12/

    - name: Install Ruff
      run: |
        python -m pip install ruff

    - name: Run linting
      run: ruff .

  sonarqube:

    runs-on: ubuntu-latest
    needs: lint

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Sonarqube
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  test:
    runs-on: ubuntu-latest
    needs: sonarqube

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install Dependencies
      run: |
        python -m pip install -U pip poetry
        poetry --version
        poetry config --local virtualenvs.in-project true
        poetry install

    - name: Run Pytest
      run: |
        poetry run pytest -x --cov-report term-missing --cov-report=xml:coverage.xml --cov=.
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: check-iban
        fail_ci_if_error: true
        token: ${{secrets.CODECOV_TOKEN}}


  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Poetry
      uses: actions/setup-python@v3
      with:
        python-version: 3.11

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Install project dependencies
      run: poetry install

    - name: Build project
      run: poetry build

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/<package-name>

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/